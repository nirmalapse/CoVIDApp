{"version":3,"sources":["components/Cards/Cards.jsx","api/index.js","components/Charts/Charts.jsx","App.js","index.js","components/Cards/Cards.module.css","App.module.css","components/Charts/Charts.module.css","images/image.png"],"names":["Cards","data","dataWorld","dataUSA","dataIndia","confirmed","Fragment","className","styles","container","Box","boxCss","color","Grid","spacing","justify","item","xs","md","component","Card","cx","card","infected","CardContent","Typography","gutterBottom","variant","start","end","value","duration","separator","Date","lastUpdate","toDateString","recovered","deaths","Divider","light","url","fetchData","a","axios","get","fetchUSAData","fetchIndiaData","fetchDailyData","console","log","map","date","reportDate","total","Charts","useState","dailyData","setDailyData","React","useEffect","initialDailyData","fetchMyAPI","lineChart","labels","datasets","label","borderColor","fill","backgroundColor","App","state","fetchedData","fetchedIndiaData","fetchedUSAData","this","setState","CssBaseline","Container","maxWidth","appstyle","image","src","alt","style","Component","ReactDom","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2e7a9025.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport styles from \"./Cards.module.css\";\r\nimport CountUp from \"react-countup\";\r\nimport { Card, Grid, CardContent, Typography, Box } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport cx from \"classnames\";\r\n\r\n// const Cards = (data) => {\r\nconst Cards = ({ data: { dataWorld, dataUSA, dataIndia } }) => {\r\n  // const Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  // const Cards = (data, usa) => {\r\n  debugger;\r\n  if (!dataWorld.confirmed) return \"Preparing Data..\";\r\n  return (\r\n    <React.Fragment>\r\n      <div className={styles.container}>\r\n        <Box className={styles.boxCss}>\r\n          <Box color=\"primary.main\">\r\n            <h1>\r\n              <u>Around Globe</u>\r\n            </h1>\r\n          </Box>\r\n          <Grid container spacing={3} justify=\"center\">\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={3}\r\n              component={Card}\r\n              className={cx(styles.card, styles.infected)}\r\n            >\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Infected\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  <CountUp\r\n                    start={0}\r\n                    end={dataWorld.confirmed.value}\r\n                    duration={2.75}\r\n                    separator=\",\"\r\n                  />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  {new Date(dataWorld.lastUpdate).toDateString()}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  Number of active cases of COVID-19.\r\n                </Typography>\r\n              </CardContent>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={3}\r\n              component={Card}\r\n              className={cx(styles.card, styles.recovered)}\r\n            >\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Recovered\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  <CountUp\r\n                    start={0}\r\n                    end={dataWorld.recovered.value}\r\n                    duration={2.75}\r\n                    separator=\",\"\r\n                  />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  {new Date(dataWorld.lastUpdate).toDateString()}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  Number of recoveries from COVID-19.\r\n                </Typography>\r\n              </CardContent>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={3}\r\n              component={Card}\r\n              className={cx(styles.card, styles.deaths)}\r\n            >\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Deaths\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  <CountUp\r\n                    start={0}\r\n                    end={dataWorld.deaths.value}\r\n                    duration={2.75}\r\n                    separator=\",\"\r\n                  />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  {new Date(dataWorld.lastUpdate).toDateString()}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  Number of deaths caused by COVID-19.\r\n                </Typography>\r\n              </CardContent>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </div>\r\n      <Divider variant=\"fullWidth\" />\r\n      <div className={styles.container}>\r\n        <Box className={styles.boxCss}>\r\n          <Box color=\"primary.main\">\r\n            <h1>\r\n              <u>USA</u>\r\n            </h1>\r\n          </Box>\r\n          <Grid container spacing={3} justify=\"center\">\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={3}\r\n              component={Card}\r\n              className={cx(styles.card, styles.infected)}\r\n            >\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Infected\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  <CountUp\r\n                    start={0}\r\n                    end={dataUSA.confirmed.value}\r\n                    duration={2.75}\r\n                    separator=\",\"\r\n                  />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  {new Date(dataUSA.lastUpdate).toDateString()}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  Number of active cases of COVID-19.\r\n                </Typography>\r\n              </CardContent>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={3}\r\n              component={Card}\r\n              className={cx(styles.card, styles.recovered)}\r\n            >\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Recovered\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  <CountUp\r\n                    start={0}\r\n                    end={dataUSA.recovered.value}\r\n                    duration={2.75}\r\n                    separator=\",\"\r\n                  />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  {new Date(dataUSA.lastUpdate).toDateString()}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  Number of recoveries from COVID-19.\r\n                </Typography>\r\n              </CardContent>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={3}\r\n              component={Card}\r\n              className={cx(styles.card, styles.deaths)}\r\n            >\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Deaths\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  <CountUp\r\n                    start={0}\r\n                    end={dataUSA.deaths.value}\r\n                    duration={2.75}\r\n                    separator=\",\"\r\n                  />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  {new Date(dataUSA.lastUpdate).toDateString()}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  Number of deaths caused by COVID-19.\r\n                </Typography>\r\n              </CardContent>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </div>\r\n      <Divider light=\"false\" variant=\"fullWidth\" />\r\n      <div className={styles.container}>\r\n        <Box className={styles.boxCss}>\r\n          <Box color=\"primary.main\">\r\n            <h1>\r\n              <u>India</u>\r\n            </h1>\r\n          </Box>\r\n          <Grid container spacing={3} justify=\"center\">\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={3}\r\n              component={Card}\r\n              className={cx(styles.card, styles.infected)}\r\n            >\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Infected\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  <CountUp\r\n                    start={0}\r\n                    end={dataIndia.confirmed.value}\r\n                    duration={2.75}\r\n                    separator=\",\"\r\n                  />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  {new Date(dataIndia.lastUpdate).toDateString()}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  Number of active cases of COVID-19.\r\n                </Typography>\r\n              </CardContent>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={3}\r\n              component={Card}\r\n              className={cx(styles.card, styles.recovered)}\r\n            >\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Recovered\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  <CountUp\r\n                    start={0}\r\n                    end={dataIndia.recovered.value}\r\n                    duration={2.75}\r\n                    separator=\",\"\r\n                  />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  {new Date(dataIndia.lastUpdate).toDateString()}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  Number of recoveries from COVID-19.\r\n                </Typography>\r\n              </CardContent>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              md={3}\r\n              component={Card}\r\n              className={cx(styles.card, styles.deaths)}\r\n            >\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>\r\n                  Deaths\r\n                </Typography>\r\n                <Typography variant=\"h5\" component=\"h2\">\r\n                  <CountUp\r\n                    start={0}\r\n                    end={dataIndia.deaths.value}\r\n                    duration={2.75}\r\n                    separator=\",\"\r\n                  />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">\r\n                  {new Date(dataIndia.lastUpdate).toDateString()}\r\n                </Typography>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                  Number of deaths caused by COVID-19.\r\n                </Typography>\r\n              </CardContent>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </div>\r\n      <Divider />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\n// Fetch GLobal data\r\nexport const fetchData = async () => {\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(url);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchUSAData = async () => {\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(\"https://covid19.mathdro.id/api/countries/USA\");\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchIndiaData = async () => {\r\n  try {\r\n    const {\r\n      data: { confirmed, recovered, deaths, lastUpdate },\r\n    } = await axios.get(\"https://covid19.mathdro.id/api/countries/India\");\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    console.log(1);\r\n    console.log({ data });\r\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({\r\n      confirmed: confirmed.total,\r\n      deaths: deaths.total,\r\n      date,\r\n    }));\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Charts.module.css\";\r\n\r\nconst Charts = () => {\r\n  const [dailyData, setDailyData] = useState({});\r\n  React.useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n      // console.log(initialDailyData);\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n  const lineChart = dailyData[0] ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n  return <div className={styles.container}>{lineChart}</div>;\r\n};\r\n\r\nexport default Charts;\r\n","import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport { Cards, Charts } from \"./components\";\r\nimport appstyle from \"./App.module.css\";\r\nimport image from \"./images/image.png\";\r\n\r\nimport { fetchData, fetchIndiaData, fetchUSAData } from \"./api\";\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    dataWorld: {},\r\n    dataUSA: {},\r\n    dataIndia: {},\r\n  };\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchData();\r\n    const fetchedIndiaData = await fetchIndiaData();\r\n    const fetchedUSAData = await fetchUSAData();\r\n    this.setState({\r\n      dataWorld: fetchedData,\r\n      dataUSA: fetchedUSAData,\r\n      dataIndia: fetchedIndiaData,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <Container maxWidth=\"lg\">\r\n          <Typography component=\"div\">\r\n            <div className={appstyle.container}>\r\n              <img className={appstyle.image} src={image} alt=\"COVID-19\" />\r\n              <hr />\r\n              <Cards style={{ backgroundColor: \"#cfe8fc\" }} data={this.state} />\r\n              {/* <Cards data={this.state} /> */}\r\n              <Charts />\r\n            </div>\r\n          </Typography>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__nLvpU\",\"card\":\"Cards_card___8XUj\",\"infected\":\"Cards_infected__HbhiZ\",\"recovered\":\"Cards_recovered__1KL-y\",\"deaths\":\"Cards_deaths__3hIei\",\"boxCss\":\"Cards_boxCss__3XvG8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1m2cj\",\"image\":\"App_image__3SSJ_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Charts_container__3EX2J\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}